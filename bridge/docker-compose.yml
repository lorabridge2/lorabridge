version: "3.8"
services:
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mqtt
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      # - ./mosquitto/passwd:/mosquitto/passwd:ro
      - mdata:/mosquitto/data
      - mlog:/mosquitto/log
    networks:
      - lorabridgenet
    healthcheck:
      test: [ "CMD-SHELL", "mosquitto_sub -C 1 -t '#' || exit 1" ]
      interval: 5s
      timeout: 5s
      retries: 1
      start_period: 15s
      disable: true
    # ports:
    #   - "1883:1883"
    #   - "9001:9001"
  forwarder:
    # build: bridge-forwarder
    image: ghcr.io/lorabridge2/bridge-forwarder:latest
    depends_on:
      - mosquitto
      - redis
    environment:
      - FOR_MQTT_USERNAME=${MQTT_USERNAME}
      - FOR_MQTT_PASSWORD=${MQTT_PASSWORD}
      - FOR_MQTT_HOST=${MQTT_HOST}
      - FOR_MQTT_PORT=${MQTT_PORT}
      - FOR_MQTT_BASE_TOPIC=${MQTT_TOPIC}
      - FOR_REDIS_HOST=${REDIS_HOST}
      - FOR_REDIS_PORT=${REDIS_PORT}
      - FOR_REDIS_DB=${REDIS_DB}
      - FOR_REDIS_LIST=${REDIS_LIST}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - lorabridgenet
  automation-manager:
    # build: bridge-automation-manager
    image: ghcr.io/lorabridge2/bridge-automation-manager:latest
    depends_on:
      - redis
      - node-red
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - NODERED_HOST=${NODERED_HOST}
      - NODERED_PORT=${NODERED_PORT}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - PYTHONUNBUFFERED=1
    volumes:
      - flows:/home/decompression/backup
    restart: unless-stopped
    networks:
      - lorabridgenet
  lorawan-interface:
    # build: bridge-lorawan-interface
    image: ghcr.io/lorabridge2/bridge-lorawan-interface:latest
    depends_on:
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - SERIAL_PORT=${SERIAL_PORT}
      - PYTHONUNBUFFERED=1
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    restart: unless-stopped
    group_add:
      - "20"
    networks:
      - lorabridgenet
  lorawan-interface-watcher:
    # build: bridge-lorawan-interface
    image: ghcr.io/lorabridge2/bridge-lorawan-interface-watcher:latest
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    user: 1337:995
    networks:
      - internal
  # lcd-ui:
  #   # build: bridge-forwarder
  #   image: ghcr.io/lorabridge/bridge-lcd-ui:latest
  #   depends_on:
  #     - mosquitto
  #     - redis
  #   volumes:
  #     # bind mount necessary gpio stuff
  #     - /sys/class/gpio:/sys/class/gpio
  #     - /sys/devices/platform/soc/fe200000.gpio:/sys/devices/platform/soc/fe200000.gpio
  #     - type: bind
  #       source: /sys/devices/platform/soc/soc:firmware/soc:firmware:gpio
  #       target: /sys/devices/platform/soc/soc:firmware/soc:firmware:gpio
  #     - ofelia:/ofelia:ro
  #   environment:
  #     - FOR_MQTT_HOST=${MQTT_HOST}
  #     - FOR_MQTT_PORT=${MQTT_PORT}
  #     - FOR_MQTT_BASE_TOPIC=${MQTT_TOPIC}
  #     - FOR_REDIS_HOST=${REDIS_HOST}
  #     - FOR_REDIS_PORT=${REDIS_PORT}
  #     - FOR_REDIS_DB=${REDIS_DB}
  #     - PYTHONUNBUFFERED=1
  #   restart: unless-stopped
  #   devices:
  #     - /dev/spidev0.0:/dev/spidev0.0
  #     - /dev/spidev0.1:/dev/spidev0.1
  #     - /dev/gpiomem:/dev/gpiomem
  #     - /dev/i2c-1:/dev/i2c-1
  #     - /dev/i2c-20:/dev/i2c-20
  #     - /dev/i2c-21:/dev/i2c-21
  #   group_add:
  #     - "999"
  #     - "997"
  #     - "998"
  #   networks:
  #     - lorabridgenet
  ofelia:
    image: mcuadros/ofelia:v0.3.7
    network_mode: host
    volumes:
      - ./config/ofelia.conf:/etc/ofelia.conf:ro
      - ofelia:/ofelia
    command: daemon
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "! head -n1 /proc/1/fd/1 | grep -E \"(ERROR|failed: true)\" || exit 1"
        ]
      interval: 10s
      timeout: 10s
      retries: 1
      start_period: 15s
      disable: true
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    command:
      [
        "sh",
        "-c",
        ' docker-entrypoint.sh --appendonly "yes" --notify-keyspace-events "KEA" '
      ]
    networks:
      - lorabridgenet
    # ports:
    #     - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 1
      start_period: 15s
      disable: true
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:1.30.3
    restart: unless-stopped
    volumes:
      # - ./data:/app/data
      - zdata:/app/data
      - /run/udev:/run/udev:ro
    # ports:
    #   # Frontend port
    #   - 8080:8080
    environment:
      - TZ=Europe/Vienna
      - ZIGBEE2MQTT_CONFIG_SERIAL_PORT=/dev/ttyUSB0
      - ZIGBEE2MQTT_CONFIG_MQTT_SERVER=mqtt://mqtt:1883
      - ZIGBEE2MQTT_CONFIG_PERMIT_JOIN=false
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    group_add:
      - dialout
    depends_on:
      - mosquitto
    # user: 1337:1337
    # entrypoint: "tail -f /dev/null"
    networks:
      - lorabridgenet
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "! tail -n2 data/log/$$(ls -1 data/log | tail -n1)/log.txt | grep failed || exit 1"
        ]
      interval: 5s
      timeout: 5s
      retries: 0
      start_period: 10s
      disable: true
  # lorawan_tx:
  #   # build: bridge-lorawan_tx
  #   image: ghcr.io/lorabridge/bridge-lorawan_tx:latest
  #   restart: unless-stopped
  #   volumes:
  #     # - ./data:/app/data
  #     - /run/udev:/run/udev:ro
  #     # - /sys/class/gpio:/sys/class/gpio
  #     # - /sys:/sys
  #     # bind mount necessary gpio stuff
  #     - /sys/class/gpio:/sys/class/gpio
  #     - /sys/devices/platform/soc/fe200000.gpio:/sys/devices/platform/soc/fe200000.gpio
  #     - type: bind
  #       source: /sys/devices/platform/soc/soc:firmware/soc:firmware:gpio
  #       target: /sys/devices/platform/soc/soc:firmware/soc:firmware:gpio
  #   environment:
  #     - TZ=Europe/Vienna
  #     - DEV_EUI=${LORA_DEV_EUI}
  #     - DEV_KEY=${LORA_DEV_KEY}
  #     - REDIS_LIST=${REDIS_LIST}
  #     - USE_LB_GW=1
  #     # - ZIGBEE2MQTT_CONFIG_SERIAL_PORT=/dev/ttyUSB0
  #   devices:
  #     - /dev/spidev0.0:/dev/spidev0.0
  #     - /dev/spidev0.1:/dev/spidev0.1
  #     - /dev/gpiomem:/dev/gpiomem
  #     # - /dev/mem:/dev/mem
  #     # - /dev/ttyAMA0:/dev/ttyAMA0
  #     # privileged: true
  #     # cap_add:
  #     #   - SYS_RAWIO
  #   group_add:
  #     - "999"
  #     - "997"
  #     # - spi
  #     # need root, because of /sys
  #     # user: 1337:1337
  #   networks:
  #     - lorabridgenet
  #   depends_on:
  #     - redis
  #   read_only: true
  interface:
    # build:
    #   context: bridge-device-interface
    #   args:
    #     VITE_SSE_ADDR: http://sse:8080
    #     VITE_REDIS_CONN_STRING: redis://redis:6379
    image: ghcr.io/lorabridge/bridge-device-interface:latest
    depends_on:
      - redis
      - sse
      - mosquitto
    restart: unless-stopped
    networks:
      - lorabridgenet
    # ports:
    #   - "3000:3000"
    expose:
      - 3000
    user: 1337:1337
    read_only: true
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget -O - http://127.0.0.1:3000/device_attributes/health --spider -q || exit 1"
        ]
      interval: 15s
      timeout: 15s
      retries: 1
      start_period: 15s
      disable: true
  interface-basic-auth:
    image: 'beevelop/nginx-basic-auth' # no other non outdated/dev tags
    ports:
      - '3000:80'
    environment:
      - PORT=80
      - FORWARD_HOST=interface
      - FORWARD_PORT=3000
      ## escape $ with $$ in Docker yml due to variable expansion
      ## example user/pass generated with htpasswd is foo:bar
      - HTPASSWD=${BASIC_AUTH}
      - HOST_HEADER=$$host
    volumes:
      - ./basic_auth/auth.conf:/opt/auth.conf:ro
    networks:
      - lorabridgenet
    depends_on:
      - interface
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail 127.0.0.1:80 2>&1 | grep \"401 Unauthorized\" || exit 1"
        ]
      interval: 10s
      timeout: 5s
      retries: 1
      start_period: 15s
      disable: true
  sse:
    # build:
    #   context: bridge-device-sse
    image: ghcr.io/lorabridge2/bridge-device-sse:latest
    depends_on:
      - zigbee2mqtt
      - redis
    restart: unless-stopped
    environment:
      - DEV_EUI=${LORA_DEV_EUI}
      - redis_conn_string=redis://redis:6379
      - mqtt_host=mqtt
      - mqtt_port=1883
    networks:
      - lorabridgenet
    ports:
      - "8080:8080"
    # expose:
    #   - 8080
    user: 1337:1337
    read_only: true
    volumes:
      - zdata:/usr/src/app/data
      - ofelia:/usr/src/app/stats:ro
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "wget 127.0.0.1:8080/devices --spider -q || exit 1"
        ]
      interval: 15s
      timeout: 15s
      retries: 1
      start_period: 15s
      disable: true
  node-red:
    image: ghcr.io/lorabridge2/bridge-node-red:latest
    #image: nodered/node-red:latest
    restart: unless-stopped
    depends_on:
      - mosquitto
    environment:
      - TZ=Europe/Vienna
    ports:
      - "1880:1880"
    networks:
      - lorabridgenet
    volumes:
      - node-red-data:/data
    healthcheck:
      disable: true
volumes:
  mdata:
  mlog:
  redis-data:
  zdata:
  ofelia:
  node-red-data:
  flows:
networks:
  lorabridgenet:
    attachable: true
    name: lorabridgenet
  internal:
    attachable: true
    name: internal
    internal: true
