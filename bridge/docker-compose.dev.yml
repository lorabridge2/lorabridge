version: "3.8"
services:
  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mqtt
    restart: unless-stopped
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      # - ./mosquitto/passwd:/mosquitto/passwd:ro
      - mdata:/mosquitto/data
      - mlog:/mosquitto/log
    networks:
      - lorabridgenet
    # ports:
    #   - "1883:1883"
    #   - "9001:9001"
  forwarder:
    build: bridge-forwarder
    image: localhost/forwarder:latest
    depends_on:
      - mosquitto
      - redis
    environment:
      - FOR_MQTT_USERNAME=${MQTT_USERNAME}
      - FOR_MQTT_PASSWORD=${MQTT_PASSWORD}
      - FOR_MQTT_HOST=${MQTT_HOST}
      - FOR_MQTT_PORT=${MQTT_PORT}
      - FOR_MQTT_BASE_TOPIC=${MQTT_TOPIC}
      - FOR_REDIS_HOST=${REDIS_HOST}
      - FOR_REDIS_PORT=${REDIS_PORT}
      - FOR_REDIS_DB=${REDIS_DB}
      - FOR_REDIS_LIST=${REDIS_LIST}
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    networks:
      - lorabridgenet
  automation-manager:
    build: bridge-automation-manager
    image: localhost/automation-manager:latest
    depends_on:
      - redis
      - node-red
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - NODERED_HOST=${NODERED_HOST}
      - NODERED_PORT=${NODERED_PORT}
      - MQTT_HOST=${MQTT_HOST}
      - MQTT_PORT=${MQTT_PORT}
      - PYTHONUNBUFFERED=1
    volumes:
      - flows:/home/decompression/backup
    restart: unless-stopped
    networks:
      - lorabridgenet
  lorawan-interface:
    build: bridge-lorawan-interface
    image: localhost/bridge-lorawan-interface
    depends_on:
      - redis
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
      - SERIAL_PORT=${SERIAL_PORT}
      - PYTHONUNBUFFERED=1
    devices:
      - /dev/ttyACM0:/dev/ttyACM0
    restart: unless-stopped
    group_add:
      - dialout
    networks:
      - lorabridgenet
  lorawan-interface-watcher:
    build: bridge-lorawan-interface-watcher
    image: localhost/bridge-lorawan-interface-watcher:latest
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    depends_on:
      - redis
    # using group names results in error
    # https://github.com/docker/compose/issues/7277
    user: 1337:1337
    group_add:
      - ${GID_DOCKER}
    networks:
      - lorabridgenet
  ofelia:
    image: mcuadros/ofelia:0.3
    network_mode: host
    volumes:
      - ./config/ofelia.conf:/etc/ofelia.conf:ro
      - ofelia:/ofelia
    command: daemon
    restart: unless-stopped
  redis:
    image: redis:7-alpine
    volumes:
      - redis-data:/data
    command:
      [
        "sh",
        "-c",
        ' docker-entrypoint.sh --appendonly "yes" --notify-keyspace-events "KEA" '
      ]
    networks:
      - lorabridgenet
    # ports:
    #     - "6379:6379"
    restart: unless-stopped
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt:2.1.1
    restart: unless-stopped
    volumes:
      # - ./data:/app/data
      - zdata:/app/data
      - /run/udev:/run/udev:ro
    # ports:
    #   # Frontend port
    #   - 8080:8080
    environment:
      - TZ=Europe/Vienna
      - ZIGBEE2MQTT_CONFIG_SERIAL_PORT=/dev/ttyUSB0
      - ZIGBEE2MQTT_CONFIG_MQTT_SERVER=mqtt://mqtt:1883
      - ZIGBEE2MQTT_CONFIG_PERMIT_JOIN=false
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
    group_add:
      - dialout
    depends_on:
      - mosquitto
    # user: 1337:1337
    # entrypoint: "tail -f /dev/null"
    networks:
      - lorabridgenet
  interface:
    build:
      context: bridge-device-interface
      args:
        # VITE_SSE_ADDR: http://sse:8080
        VITE_REDIS_CONN_STRING: redis://redis:6379
    environment:
      - VITE_SSE_ADDR=http://sse:8080
    image: localhost/interface:latest
    depends_on:
      - redis
      - sse
      - mosquitto
    restart: unless-stopped
    networks:
      - lorabridgenet
    ports:
      - "3000:3000"
    user: 1337:1337
    read_only: true
  sse:
    build:
      context: bridge-device-sse
    image: localhost/sse:latest
    environment:
      - DEV_EUI=${LORA_DEV_EUI}
      - redis_conn_string=redis://redis:6379
      - mqtt_host=mqtt
      - mqtt_port=1883
    depends_on:
      - zigbee2mqtt
      - redis
    restart: unless-stopped
    networks:
      - lorabridgenet
    ports:
      - "8080:8080"
    # expose:
    #   - 8080
    user: 1337:1337
    read_only: true
    volumes:
      - zdata:/usr/src/app/data
      - ofelia:/usr/src/app/stats:ro
  node-red:
    build: bridge-node-red
    image: localhost/bridge-node-red:latest
    #image: nodered/node-red:latest
    restart: unless-stopped
    depends_on:
      - mosquitto
      - redis
    environment:
      - TZ=Europe/Vienna
    ports:
      - "1880:1880"
    networks:
      - lorabridgenet
    volumes:
      - node-red-data:/data
      - ./config/node-red/settings.js:/data/settings.js:ro
    healthcheck:
      disable: true
volumes:
  mdata:
  mlog:
  redis-data:
  zdata:
  ofelia:
  node-red-data:
  flows:
networks:
  lorabridgenet:
    attachable: true
    name: lorabridgenet
  internal:
    attachable: true
    name: internal
    internal: true
